SQL constraints

Constraints are the rules that we can apply on the type of data in a table. 
That is, we can specify the limit on the type of data that can be stored
in a particular column in a table using constraints. 

The available constraints in SQL are: 
 

NOT NULL: This constraint tells that we cannot store a null value in a column. That is, if a column is specified as NOT NULL then we will 
not be able to store null in this particular column any more. 

UNIQUE: This constraint when specified with a column, tells that all the values in the column must be unique. 
That is, the values in any row of a column must not be repeated. 

PRIMARY KEY: A primary key is a field which can uniquely identify each row in a 
table. 
And this constraint is used to specify a field in a table as primary key. 

FOREIGN KEY: A Foreign key is a field which can uniquely identify each row in a another table.
And this constraint is used to specify a field as Foreign key.

CHECK: This constraint helps to validate the values of a column to meet a particular condition. 
That is, it helps to ensure that the value stored in a column meets a specific condition.

DEFAULT: This constraint specifies a default value for the column when no
value is specified by the user.

1. NOT NULL
NULL means empty, i.e., the value is not available.
Whenever a table's column is declared as NOT NULL, then the value for that column cannot be empty for any of the table's records.
There must exist a value in the column to which the NOT NULL constraint is applied.

2. UNIQUE
Duplicate values are not allowed in the columns to which the UNIQUE constraint is applied.
The column with the unique constraint will always contain a unique value.
This constraint can be applied to one or more than one column of a table, which means more than one unique constraint can exist on a single table.
Using the UNIQUE constraint, you can also modify the already created tables.

3. PRIMARY KEY
PRIMARY KEY Constraint is a combination of NOT NULL and Unique constraints.
NOT NULL constraint and a UNIQUE constraint together forms a PRIMARY constraint.
The column to which we have applied the primary constraint will always contain a unique value and will not allow null values.

4. FOREIGN KEY
A foreign key is used for referential integrity.
When we have two tables, and one table takes reference from another table, i.e., the same column is present in both the tables and 
that column acts as a primary key in one table. That particular column will act as a foreign key in another table.

5. CHECK
Whenever a check constraint is applied to the table's column, and the user wants to insert the value in it, 
then the value will first be checked for certain conditions before inserting the value into that column.
For example: if we have an age column in a table, then the user will insert any value of his choice. The user will also enter even a negative value 
or any other invalid value. But, if the user has applied check constraint on the age column with the condition age greater than 18. 
Then in such cases, even if a user tries to insert an invalid value such as zero or any other value less than 18, then the age column will not accept 
that value and will not allow the user to insert it due to the application of check constraint on the age column.

6. DEFAULT
Whenever a default constraint is applied to the table's column, and the user has not specified the value to be inserted in it, then the default value 
which was specified while applying the default constraint will be inserted into that particular column.